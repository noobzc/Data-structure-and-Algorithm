import Queue

class Node:
        def __init__(self, value = None, left = None, right = None):
                self.value = value
                self.left = left
                self.right = right

def pre_travel_tree(root):
        if root is None:
                return -1
        print root.value
        pre_travel_tree(root.left)
        pre_travel_tree(root.right)

def mid_travel_tree(root):
        if root is None:
                return -1
        pre_travel_tree(root.left)
        print root.value
        pre_travel_tree(root.right)

def last_travel_tree(root):
        if root is None:
                return -1
        pre_travel_tree(root.left)
        pre_travel_tree(root.right)
        print root.value


def get_tree_height(root):
        if root == None:
                return 0
        left_height = get_tree_height(root.left)
        right_height = get_tree_height(root.right)
        if left_height > right_height:
                return left_height + 1
        if left_height <= right_height:
                return right_height + 1
                
                
def get_tree_weight(root):
        current_weight = 1
        max_weight = 0
        q = Queue.Queue(-1)
        q.put(root)
        while not q.empty():
                n = current_weight
                for i in xrange(n):
                        node = q.get()
                        current_weight -= 1
                        if node.left:
                                q.put(node.left)
                                current_weight += 1
                        if node.right:
                                q.put(node.right)
                                current_weight += 1
                if current_weight > max_weight:
                        max_weight = current_weight
        return max_weight

def get_leaf_count(root):
        rs = 0
        if root is None:
                return rs
        if root.left is None and root.right is None:
                rs += 1
                return rs
        if root.left is not None:
                rs += get_leaf_count(root.left)
        if root.right is not None:
                rs += get_leaf_count(root.right)

        return rs

if __name__ == '__main__':
        root = Node('D', Node('B', Node('A'), Node('C')), Node('E', right = Node('G', Node('F'))))
        print 'pre'
        pre_travel_tree(root)
        print 'mid'
        mid_travel_tree(root)
        print 'last'
        last_travel_tree(root)
        print 'tree height'
        height = get_tree_height(root)
        print height
        print 'tree weight'
        weight = get_tree_weight(root)
        print weight
        print 'leaf count'
        leaf_count = get_leaf_count(root)
        print leaf_count
        
